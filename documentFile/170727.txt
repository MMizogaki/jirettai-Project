==========
iOSの開発フロー、CI、QAテストからテストアプリ配信、アプリ申請、及びそれらの自動化まで、皆がどんな感じでやってるか軽く聞き込みしましたー。
特に機密情報ではないのですが、個人間のやり取りで聞いたので *絶対に外部に出さず、オフレコ* でお願いします。

▼某有名iOSエンジニアTさん（現在はSFにあるF社）
・CI
pushするとjenkinsのテスト（が、網羅性はない）

・テスト
手動テスト→テスト項目をスプレッドシートみたいなものに列挙しておき、QAチームが担当

・テストアプリ配信
Testflight

・申請自動化
申請の自動化はやってない、誰かが手動でやってる

・その他
try! swiftであったクックパッド社の発表が参考になるかも？
Tasting tests at Cookpad
https://www.slideshare.net/KazuMatsu/20170302-tryswift-tastingtests

▼某大手ECサイトRのトラベル部門
・開発フロー
1．実装する
2．Pull Requestをなげる
3．CIがPull Requestを検知して、最新のコミットをチェックアウト→Unit Test→その結果をPull Requestに反映
4．レビューが終わりmasterにマージ
5．リリース用のブランチを作成
6．CIがリリース用のブランチを検知し、チェックアウト→Unit Test
7．Unit Testが通ったら、Test Flightへアップロード
8．QAのひとがTest Flightからアプリをダウンロードして手動テスト
9．バグがあれば修正

・CI
Travis CI
別案件では自前のMac miniにJenkins

・テスト
Unitテスト→XCTest
UIテスト→少し書いてたけどあまりうまく動かなかった。
手動テスト→仕様をもとにテストケースを先に作っておいてもらって、それを順次実施していってもらうという流れ。（実機で）

・テストアプリ配信
Testflight

・自動化
FastlaneでUnit Test、Test Flightへのアップロード

・その他
iOS Test Nightという勉強会が参考になりそう
https://testnight.connpass.com/

▼某ハンドメイドのフリマアプリm
・CI
jenkins 社内のmac pro上で回してた

・テスト
Unitテスト→MVPに作り直した
UIテスト→KIF でも時間かかるしランダムに落ちる〜〜みたいなことが多々発生していたので基本書かない方針。
手動テスト→エンジニア、デザイナ、PO一人づつの系3名で、エンジニアが作成したテスト仕様書(Google Spreadsheet)に則ってやる + オフショアに同じテスト仕様書を渡してやってもらってた。ただオフショアのに関しては時間がかかるためリリースサイクルには含めずにそこで上がったバグは後日直す。

・テストアプリ配信
TestFlight

・自動化
Fastlaneで申請

・その他

▼某ママ専用Q&Aアプリ（上記ハンドメイドアプリの人の現職）
・CI
Travis (たまに落ちますね

・テスト
Unitテスト→quick
UIテスト→やってない
手動テスト→社内に配布してそのタイミングでおかしなところがないか指摘してもらう。spread sheetでテスト仕様書作って〜などはしてない。

・テストアプリ配信
TestFlight

・自動化
Fastlaneでipaをstoreにアップロード。最後の申請は手動でぽちぽち



▼某ビジネスSNS Wの有名iOSエンジニアSさん
・テスト
Unitテスト→工数分新規機能開発を優先し、未着手。スタートアップで、PDCAを高速に回すため、多少品質を犠牲にしている
UIテスト→UITestは画面がよく変わる（改善のため）のでメンテできず
手動テスト→毎日リグレッションテストをしてますが、リリースサイクル２週間なら、申請直前の４，５日前をコードフリーズとして、特に重点的にQAテスト

・その他
クックパッドは、全画面キャプチャーして、前回の画面画像との差分があるものを目視で確認しているらしい。
テストは品質要件とリリーススピード、コストとのトレードオフなので、最適なテストはプロダクト、プロジェクトによって異なります。

----
